plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'

    id 'io.sentry.android.gradle' version '5.0.0'
}

android {
    compileSdk 35
    defaultConfig {
        applicationId 'za.co.sbmkinetics.trailblazer'
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 94
        versionName '1.2.0 - SOS Alerts, Photo Capture, Sentry, Photo Auth'
        multiDexEnabled true
    }
    namespace 'org.traccar.client'

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }

    buildFeatures {
        flavorDimensions = ['default']
    }
    productFlavors {
        regular {
            isDefault = true
            ext.enableCrashlytics = false
        }
        google
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lint {
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // add the code from below line.
        applicationVariants.all{
                // this method is use to rename your all apk weather
                // it may be signed or unsigned(debug apk)
            variant ->
                variant.outputs.each{
                        // on below line we are setting a
                        // name to our apk as GFG.apk
                    output->
                        def name = "trailblazer-pioneer-client-${variant.versionName}.apk"
                        // on below line we are setting the
                        // outputFile Name to our apk file.
                        output.outputFileName = name
                }
        }
    }

}

dependencies {
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.github.judemanutd:autostarter:1.1.0'
    implementation('dev.doubledot.doki:library:0.0.1@aar') {
        transitive = true
    }
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.activity:activity:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation("androidx.cardview:cardview:1.0.0")


    // Add this line for the Credentials API
    implementation("androidx.credentials:credentials:1.5.0")

    // Retrofit dependencies for networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

// OkHttp for handling HTTP requests
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

// Coroutine support for Retrofit
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

// Permissions (if needed for Camera access)
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.core:core-ktx:1.12.0'

// Glide (optional, for handling images)
    implementation 'com.github.bumptech.glide:glide:4.15.1'



    implementation 'com.google.firebase:firebase-config-ktx:22.0.1'
    implementation 'androidx.credentials:credentials:1.5.0'
    testImplementation 'androidx.test:core:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.7.3'
    googleImplementation platform('com.google.firebase:firebase-bom:33.2.0')
    googleImplementation 'com.google.firebase:firebase-analytics'
    googleImplementation 'com.google.firebase:firebase-crashlytics'
    googleImplementation 'com.google.android.gms:play-services-location:21.3.0'
    googleImplementation 'com.google.android.play:review:2.0.1'

    implementation platform('com.google.firebase:firebase-bom:32.0.0') // Firebase BoM
    implementation 'com.google.firebase:firebase-analytics-ktx' // Example Firebase service

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0'

    implementation 'androidx.credentials:credentials-play-services-auth:1.5.0'

}

tasks.register('copyFirebaseConfig', Copy) {
    from '../../environment/google-services'
    into '.'
    include 'traccar-client-android.json'
    rename('traccar-client-android.json', 'google-services.json')
}
afterEvaluate {
    tasks.matching { it.name.contains('Google') }.configureEach { task ->
        if (task.name.contains('Regular')) {
            task.enabled false
        } else {
            task.dependsOn copyFirebaseConfig
        }
    }
}


sentry {
    org = "exonic-solutions"
    projectName = "trailblazer-client-android"

    // this will upload your source code to Sentry to show it as part of the stack traces
    // disable if you don't want to expose your sources
    includeSourceContext = true
}
